#include <Adafruit_NeoPixel.h>

#define PIN            5  
#define WIDTH          32 // Width of the matrix (32 pixels)
#define HEIGHT         8  // Height of the matrix (8 pixels)
#define NUMPIXELS      (WIDTH * HEIGHT) 
#define BUTTON_PIN     4  // GPIO pin connected to the button

// Initialize the NeoPixel matrix
Adafruit_NeoPixel matrix = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);

// Array of matrices
uint32_t matrix1[HEIGHT][WIDTH] = {
  {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFD8944, 0xFB7E41, 0xF86C3C, 0xF5613E, 0xF4604C, 0xF1534D, 0xEF4851, 0xEB3E53, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFB7E42, 0xF96D33, 0xF88D6B, 0xF68F7B, 0xF14B38, 0xF04D49, 0xEE404B, 0xEA364D, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xF97648, 0xF65B2D, 0xF6BEB1, 0xF7CECB, 0xF25548, 0xEF494B, 0xED3E4D, 0xE9364E, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xF66B4B, 0xF35433, 0xF5ACA0, 0xF8EBEB, 0xF6E2E1, 0xF3858B, 0xEB2E43, 0xE93851, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xF4614D, 0xF04734, 0xF5B2AD, 0xECB0B3, 0xECAFAF, 0xF3ABB4, 0xE9253F, 0xEA3952, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xF25751, 0xEE3A37, 0xF5B9B7, 0xF3B1B6, 0xF4B3B7, 0xF3AEB9, 0xE9243F, 0xEA3952, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xEF4A52, 0xEE3945, 0xE36874, 0xE16474, 0xE16474, 0xE26475, 0xEC2F49, 0xE93750, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xEA3E53, 0xEA374E, 0xE62D46, 0xE62D46, 0xE62D46, 0xE62D46, 0xEA3750, 0xE7354D, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}
};

uint32_t matrix2[HEIGHT][WIDTH] = {
  {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFE3E6, 0xFFD5DB, 0xFAC6D3, 0xF5C4D5, 0xEED3E7, 0xD7DCF4, 0xB8DAF6, 0x92C7E4, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xE2D5EB, 0xC2CFEB, 0xDDE1EE, 0xB0CCDC, 0x538AA2, 0x396576, 0x213D44, 0x16231E, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x447285, 0x1C404B, 0xDAE0DE, 0x9F9991, 0x2A1807, 0x422207, 0x5D3114, 0x813D29, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x352308, 0x4B2307, 0xDBD2CD, 0xF3EFEF, 0xF4EEEC, 0xE8B0AE, 0xE7404D, 0xF25457, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xCE4951, 0xDE3B47, 0xF7DFE3, 0xEFC5B6, 0xEBB6AA, 0xFFF1E6, 0xFF8C20, 0xFFA41D, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF7C40, 0xFF841F, 0xFFEEE4, 0xFAD183, 0xFCD281, 0xF5F8E4, 0xB7CA2A, 0x90D253, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xE2C626, 0xBAC928, 0xDEEDCF, 0x9FDFB2, 0x9EDCB3, 0xC7E7EB, 0x1ABABD, 0x21ABCF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x41CD9E, 0x27C0B6, 0x36A0B5, 0x2F96C7, 0x3589CE, 0x5370C6, 0x665CD8, 0x7F47D2, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}
};

uint32_t matrix3[HEIGHT][WIDTH] = {
  {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF0000, 0x00FF00, 0xE44F50, 0xF3324F, 0xEC354E, 0xEE2E49, 0xF0354F, 0xF0304A, 0xF84E62, 0x000000, 0x000000, 0x000000, 0xFF3F3F, 0xFF3F3F, 0xFF3F3F, 0xFF3F3F, 0xFF007F, 0x000100, 0x000000, 0x000000, 0xEC3850, 0xCC3366, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xDC8B58, 0xF93C4B, 0xF68597, 0xEF5E72, 0xF26175, 0xF5415A, 0xFA4A62, 0xEF2945, 0xF02A46, 0xF13B56, 0x000101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xE40000, 0xF32745, 0xF43A55, 0xEB344E, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0xE26352, 0xFA324D, 0xFAD4D9, 0xFBD5DA, 0xF59CA9, 0xF38897, 0xF3909D, 0xF3697D, 0xFF7387, 0xF2314C, 0xED324B, 0xED354F, 0xE9233D, 0xEA2F47, 0xEB314B, 0xED2D47, 0xF16377, 0xFF5E74, 0xEB304A, 0xF33A54, 0xEA364F, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xD2B452, 0xE74A4C, 0xF54A65, 0xF498A4, 0xF6AAB4, 0xF49DAA, 0xF9CCD2, 0xF6A2AD, 0xF59EAA, 0xEF697B, 0xF59EAA, 0xF74E66, 0xFC415B, 0xFF6D82, 0xFF526A, 0xFF5F75, 0xFF7588, 0xFBB8C1, 0xF5A2AD, 0xFD344F, 0xEF3952, 0xEA394E, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xDD7F50, 0xF44553, 0xEC3652, 0xF0314B, 0xFF526A, 0xFE697E, 0xF997A5, 0xF6A6B2, 0xF28292, 0xEE566B, 0xFDF6F7, 0xED475E, 0xF17082, 0xF1798B, 0xF28292, 0xF06376, 0xF6B2BC, 0xF88998, 0xFF788B, 0xF0344D, 0xD42A2A, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xD98750, 0xEC5151, 0xE72E45, 0xF03D55, 0xEE2E47, 0xEF2C46, 0xEE334D, 0xFB455F, 0xFF8496, 0xFC7B8D, 0xFAA8B4, 0xEF5066, 0xF06B7E, 0xF28493, 0xF48A99, 0xF97C8D, 0xFF6A7F, 0xF33C56, 0xEC2240, 0x000000, 0x000000, 0xFF007F, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xD78B50, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xF23F4C, 0xEF2F4C, 0xEF2844, 0xEE304A, 0xEE3E57, 0xEE4158, 0xF23B54, 0xF8697D, 0xEF4058, 0xF34058, 0xEF233F, 0xE63048, 0x000000, 0xAA5555, 0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xD88A51, 0xFF0000, 0xBF3F3F, 0xFF5555, 0xFF3F3F, 0xFF5555, 0x000000, 0x000000, 0x000000, 0x000101, 0xF52542, 0xEC2E4A, 0xED3450, 0xEE1633, 0xF12B4A, 0xE50019, 0x000000, 0x000000, 0xFF5555, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}
};

uint32_t matrix4[HEIGHT][WIDTH] = {
  {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xBFBFBF, 0x00FFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0xFF55AA, 0xFFAAAA, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0x7B2330, 0xCD5264, 0xC63C50, 0xA4263A, 0x280000, 0x000000, 0x000000, 0x000000, 0x220000, 0x231A23, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xDCDCDD, 0xB1B1B1, 0x52414A, 0x000000, 0xBB2F43, 0xFFABBB, 0xFFABB9, 0xFF8FA0, 0xDA6575, 0xC04153, 0xB73F50, 0xD46E7E, 0xD76273, 0x661525, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xCFCFD0, 0xA5A6A8, 0x8E2839, 0xBE384C, 0xCF596B, 0xE57181, 0xFF8C9D, 0xFF6F85, 0xFF8195, 0xF17587, 0xBC5B69, 0x720C19, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 0xE7E7E8, 0xB7B7B9, 0x49867F, 0x000000, 0x000000, 0x700418, 0x9F273A, 0xB33649, 0xAE3F50, 0x51000B, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFBFBFB, 0xE9E9EA, 0x88888B, 0x6A3F3F, 0xFF7FBF, 0x020202, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFAAAA, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xB8B8BA, 0xC9C9CA, 0xAAAAAB, 0x777779, 0x000000, 0xFFFFFF, 0x000000, 0x7F007F, 0xBF3F3F, 0xFF3F3F, 0xBF3F7F, 0x7F0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}, {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}
};

uint32_t* matrices[] = { &matrix1[0][0], &matrix2[0][0], &matrix3[0][0], &matrix4[0][0] };

volatile uint8_t currentMatrix = 0; 

// Convert RGB values to 24-bit format
uint32_t color(uint8_t r, uint8_t g, uint8_t b) {
  return matrix.Color(r, g, b);
}

void setup() {
  matrix.begin();
  matrix.show(); 
  pinMode(BUTTON_PIN, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(BUTTON_PIN), changeMatrix, FALLING);
}

void loop() {
  uint32_t* currentMatrixPtr = matrices[currentMatrix];
  for (int y = 0; y < HEIGHT; y++) {
    for (int x = 0; x < WIDTH; x++) {
      matrix.setPixelColor(x + y * WIDTH, *(currentMatrixPtr + x + y * WIDTH));
    }
  }
  matrix.show(); // Update the display with pixel colors
  delay(100);    
}

void changeMatrix() {
  currentMatrix = (currentMatrix + 1) % 4;
}
